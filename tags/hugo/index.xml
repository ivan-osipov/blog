<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Ivan Osipov</title>
    <link>https://i-osipov.ru/tags/hugo/index.xml</link>
    <description>Recent content in Hugo on Ivan Osipov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <atom:link href="https://i-osipov.ru/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo and Math</title>
      <link>https://i-osipov.ru/post/hugo-and-math/</link>
      <pubDate>Wed, 25 Apr 2018 09:17:46 +0400</pubDate>
      
      <guid>https://i-osipov.ru/post/hugo-and-math/</guid>
      <description>&lt;p&gt;Сейчас я в нахожусь в процессе прохождения курсов по Data Science и как следствие некоторые вещи мне хочется законспектировать
в виде блога. Основная проблема в том, что для конспектирования материала хотелось бы иметь возможность
писать математические формулы в LaTeX синтаксисе или около того. Если хорошенько поискать, то в документации
hugo можно наткнуться на вот &lt;a href=&#34;https://gohugo.io/content-management/formats/#mathjax-with-hugo&#34; target=&#34;_blank&#34;&gt;этот&lt;/a&gt;
раздел. Заметка будет полезна тем, кто организовывает свой блог через статик-генератор gohugo и хочет подключить поддержку
формул.&lt;/p&gt;

&lt;p&gt;Библиотека MathJax - js библиотека, которая позволяет отображать математические выражения описанные в LaTeX синтаксисе.
Для того, чтобы подключить поддержку этой библиотеки к вашему блогу, во-первых создадим пока пустой файл &lt;strong&gt;mathjax_support.html&lt;/strong&gt; и положим
его в папку исходников блога layouts/partials сразу же подключим и проинициализируем его в файле header.md перед закрывающим тегом &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; следующим образом:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{{ partial &amp;quot;mathjax_support.html&amp;quot; . }}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Наполним файл следующим образом: укажем где найти библиотеку и как её проинициализировать.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;

&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;
MathJax.Hub.Config({
  tex2jax: {
    inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],
    displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]],
    processEscapes: true,
    processEnvironments: true,
    skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;],
    TeX: { equationNumbers: { autoNumber: &amp;quot;AMS&amp;quot; },
         extensions: [&amp;quot;AMSmath.js&amp;quot;, &amp;quot;AMSsymbols.js&amp;quot;] }
  }
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Готово. На страничке &lt;a href=&#34;https://gohugo.io/content-management/formats/#mathjax-with-hugo&#34; target=&#34;_blank&#34;&gt;hugo документации&lt;/a&gt;
можно найти решения основных проблем при подключении библиотеки. Лично у меня заработало из коробки.&lt;/p&gt;

&lt;p&gt;В результате, следующий код:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$$
c^{2} = a^{2} + b^{2}
$$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Превращается в формулу:&lt;/p&gt;

&lt;p&gt;$$
c^{2} = a^{2} + b^{2}
$$&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Программист? Сделай блог</title>
      <link>https://i-osipov.ru/post/do_the_blog/</link>
      <pubDate>Thu, 20 Jul 2017 00:19:26 +0400</pubDate>
      
      <guid>https://i-osipov.ru/post/do_the_blog/</guid>
      <description>&lt;p&gt;&lt;em&gt;Время чтения: 20 минут&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Всем привет!&lt;br /&gt;
Как и обещал, переношу свой пост из телеграм канала &lt;strong&gt;Джун уронил прод&lt;/strong&gt; &lt;a href=&#34;https://t.me/djuup&#34;&gt;@djuup&lt;/a&gt;.&lt;br /&gt;
Статья &lt;strong&gt;Программист? Сделай блог&lt;/strong&gt; выходила на канале в двух частях, здесь вы можете прочитать обе в одном целостном посте.
Приятного чтения!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;О чем этот пост&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Наполнение этого поста расскажет, как быстро и просто запустить собственный блог аналогичный этому, а если вы программист и шарите, то сделать это абсолютно бесплатно и красиво. Стоимость сделать такой блог колышется от 0 до 99 рублей в год и всё зависит от того захотите ли вы свой красивый домен. Я захотел.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Читайте дальше, если вы понимаете зачем вам блог и уже горите идеями, так ярко, что даже у черных дыр не хватило бы массы утянуть за собой столько света.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Здесь вы не найдете филосовствований о целевой аудитории и интересном контенте, а только техническая сторона, по делу, что и как сделать.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Поехали&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Что такое блог в глазах программиста? Это какая-то информация в виде постов, которую нужно выбрасывать по первому требованию, так давайте выбрасывать его с энтузиазмом. Конечно, вы можете взять WordPress и в красивом интерфейсе накидать всё что хотите. Управлять контентом из админки и так далее, но готовы ли вы отдавать за возможность подключить кастомный домен по $3 в месяц, да еще и оплата ежегодная, т.е. вы сразу выкините $ 36 (2160 руб. при курсе 60 руб за $1). Это путь моей жены, но не мой.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/do_the_blog/gagarin.jpg&#34; alt=&#34;Gagarin&#34; title=&#34;Gagarin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;К чёрту динамику&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Я убежден, что всё что нужно для суперского блога это html + css и немножко js. Какие PHP? Какая БД? Что за чушь! Момент, когда вы публикуете новый пост вполне детерминирован и на самом деле, всё что вам нужно, это сохранить страничку с вашим годным контентом, а затем отдать её при запросе определенного URL&amp;rsquo;a. Как это сделать? На помощь приходят генераторы статических страниц, такие как Hugo или Jekyll. В этом посте остановимся на hugo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/do_the_blog/hugo.png&#34; alt=&#34;Hugo&#34; title=&#34;Hugo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;ldquo;Где этот мерзавец?&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Для начала ставим себе Git, например, &lt;a href=&#34;https://git-scm.com/&#34;&gt;отсюда&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;ldquo;Хочу блог. Красивый чтоб&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Примерно так и работает hugo. Наша цель на этом этапе сгенерировать себе блог для этого, по шагам:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Качаем Hugo&lt;/a&gt; в любую удобную директорию&lt;/li&gt;
&lt;li&gt;Добавляем к Path в переменных окружения bin папку в этой директории, например, C://hugo/bin. Теперь мы можем генерить где угодно и что угодно&lt;/li&gt;
&lt;li&gt;Открываем cmd или bash (что сподручнее) переходим в директорию, где появится папка с блогом. Находясь в этой директории прописываем:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;hugo new site your-blog-name
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Готово, блог сгенерён, но вы же хотите, чтобы красиво? По этому, переходим в папку с блогом, выбираем тему &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;здесь&lt;/a&gt; (пожалуй, самый сложный этап - это выбрать тему) и действуем в соответствии с указаниями в теме. Скорее всего они будут следующими: перейдите в папку themes и склонируйте туда гит репозиторий темы, возьмем, например, эту &lt;a href=&#34;https://github.com/beli3ver/hemingway2&#34;&gt;тему&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Склонировали? Возвращаемся в папку с блогом и открываем текстовым редактором файл &lt;strong&gt;config.toml&lt;/strong&gt;. В нём устанавливаем тему, например, так&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;theme = &amp;quot;hemingway2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Почти готово. Пишем в cmd/bash&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;hugo
hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Изи катка. Открываем &lt;em&gt;&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/em&gt; вот и наш блог.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Блог без постов как Нева без мостов&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Чтобы докинуть постов не обязательно выключать сервер. Просто открываете еще одну консоль/терминал и пишете&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/my-new-post.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Каждый пост - это Markdown файлик с дополнительными метаднными, этот файлик вы найдете в &lt;strong&gt;content/post&lt;/strong&gt;. Чтобы опубликовать пост нужно указать в метаданных внутри файла: &lt;strong&gt;draft = false&lt;/strong&gt;. Метаданные отделяются плюсами.&lt;/p&gt;

&lt;p&gt;Каждый новый пост - это новый файлик, благодаря которому обновляется статический контент.&lt;/p&gt;

&lt;p&gt;Нужно понимать, что предварительно сгенерированная статика это довольно быстро и абсолютно безопасно, т.к. у вас нет админки, которую можно взломать.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;НА ПРОД!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Всё бы хорошо, только что с этим всем делать?&lt;/p&gt;

&lt;p&gt;После выполнения пустой команды &lt;strong&gt;hugo&lt;/strong&gt; каждый раз перегенерируется папка &lt;strong&gt;public&lt;/strong&gt;. Она-то нам и нужна. В этой папке лежит готовая статика блога. Но нужно куда-то это опубликовать. Здесь на помощь приходят github pages. Регистрируемся на github.com и создаем репозиторий, например, &lt;strong&gt;blog&lt;/strong&gt;. При создании репозитория github напишет как правильно отправить туда код. Что же нужно сделать в нашем случае? Перейти в папку &lt;strong&gt;public&lt;/strong&gt; и выполнить в ней:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
git add *
git commit -m &#39;init&#39;
git remote add origin https://github.com/&amp;lt;user-login&amp;gt;/&amp;lt;repo-name&amp;gt;.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Не забудьте поправить URL&amp;rsquo;ы. При любых изменениях в блоге вам нужно будет перекоммитить статику в гитхаб. Теперь открываем настройки репозитория (Settings) и смотрим что там есть. Находим раздел GitHub Pages. Указываем, что статика будет браться из master ветки и сохраняем.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Вот и всё&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GitHub на месте скажет ваш URL, это будет что-то вроде &lt;a href=&#34;https://ivan-osipov.github.com/blog&#34;&gt;https://ivan-osipov.github.com/blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Как свистульки прикрутить?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hugo - довольно гибкий инструмент и с его помощью можно провернуть много чего интересного не рассмотренного в этой статье. Ответы на большинство вопросов дает &lt;a href=&#34;https://gohugo.io/getting-started/&#34;&gt;документация Hugo&lt;/a&gt;. Отнеситесь внимательно и к документации темы, она поможет вам лучшим способом сконфигурировать и настроить ваш блог.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Прикрепление пользовательского домена&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Чтобы получить домен его придется купить. Наиболее дешевый вариант, который я нашел, это &lt;a href=&#34;https://2domains.ru&#34;&gt;https://2domains.ru&lt;/a&gt;. Там я приобрел домен i-osipov.ru на год всего за 99 рублей, сейчас, как я вижу, стоимость доменов в зоне ru у этого провайдера  149 рублей, при желании вы можете поискать что-то по-дешевле.&lt;/p&gt;

&lt;p&gt;Итак, домен в кармане и что же теперь с ним делать?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloudflare.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Зачем нам этот сайт? Всё просто, фактически это своего рода панель управления прокси к нашему блогу. Настроить там можно многое множество вещей, но об этом в отдельной статье. Выполним следующую последовательность действий:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;регистрируемся на cloudflare.com;&lt;/li&gt;
&lt;li&gt;справа сверху нажмите на кнопку &amp;ldquo;+Add Site&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;в форму вписываем ваш домен и нажимаем Begin Scan. Недолго ждем, тем временем cloudflare загружает всю доступную информацию по нашему домену;
нажимаем Continue;&lt;/li&gt;
&lt;li&gt;cloudflare спросит нас о плане, который мы хотим использовать и здесь можно выбрать Free Website;&lt;/li&gt;
&lt;li&gt;следующим шагом от нас потребуется поменять DNS сервера для ранее купленного домена. Например, для сайта &lt;strong&gt;yandex.com&lt;/strong&gt; cloudflare требует сделать следующие изменения:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/do_the_blog/dns.png&#34; alt=&#34;DNS&#34; title=&#34;DNS&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Изменение DNS серверов на 2domain.ru&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Чтобы изменить DNS сервера необходимо зайти в личный кабинет. В меню &lt;strong&gt;Домены -&amp;gt; Мои домены&lt;/strong&gt; выбрать указанный на cloudflate домен. Открыть раздел &amp;ldquo;Управление ДНС-серверами/Делегирование&amp;rdquo; и тут нужно сменить используемые dns сервера для домена. Давайте заменим записи &lt;em&gt;ДНС 1&lt;/em&gt; и &lt;em&gt;ДНС 2&lt;/em&gt; на &lt;strong&gt;elliot.ns.cloudflare.com&lt;/strong&gt; и &lt;strong&gt;jasmine.ns.cloudflare.com&lt;/strong&gt; соответственно. Выглядит это примерно так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/do_the_blog/dns_update.png&#34; alt=&#34;DNS_UPDATE&#34; title=&#34;DNS Update&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Для понимания, теперь IP будет определяться благодаря этим DNS серверам. DNS сервера принадлежат Coudflare.com.&lt;/p&gt;

&lt;p&gt;Ваш сайт или блог будет активирован в течении 24 часов, также в течении этого времени будет создан сертификат для подержки https. Но пока нам нужно хотя бы связать домен с GitHub Pages. Давайте это сделаем.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Прикрепляем к GitHub Pages свой домен&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Сделать это очень просто заходим в репозиторий где лежит статика, открываем Settings. В разделе GitHub Pages под Custom Domain вписываем свой домен и жмем Save. Отлично! Страничку с GitHub можно на сегодня закрыть.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Прописываем матчинг записей DNS на сервера GitHub&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Пример записей, которые вам нужно сделать в CloudFlare ниже. Естественно, каждое использование &lt;em&gt;i-osipov.ru&lt;/em&gt; следует заменить на свой домен.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../img/posts/do_the_blog/domain.png&#34; alt=&#34;DOMAIN&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Как вы видите в двух верхних строках указывается 2 разных IP адреса. Это специальные адреса GitHub, при желании вы можете проверить их &lt;a href=&#34;https://help.github.com/articles/setting-up-an-apex-domain/&#34;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;DNS изменения обновляются около суток, в моем случае несколько часов.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Что мы имеем на этом этапе?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;При входе на &lt;a href=&#34;http://your-domain.com&#34;&gt;http://your-domain.com&lt;/a&gt; ваша статика созданная ранее отдается поситителю. Первая и самая трудная часть плана выполнена. Теперь давайте настроим https. Https основывается на сертификатах, сертификаты бывают разных видов, но нас - любителей бесплатных сертификатов это не должно интересовать.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTPS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Если кратко, то https для блога вам нужен только для красоты.&lt;/p&gt;

&lt;p&gt;Что такое HTTPS? Это расширенная версия протокола HTTP, которая шифрует транспортируемые данные между клиентом и сервером (в нашем случае) и если в вашем блоге есть форма обратной связи или любые другие данные пользователя, то сделать https имеет смысл.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Какой профит для блога?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Психология. Так исторически сложилось, что зеленый цвет - цвет доверия и когда пользователь заходит на ваш сайт/блог и видит зеленый замочек, то кредит доверия к вашему ресурсу увеличивается, хотя программистов обычно так не на дурить.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SSL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Вернемся к cloudflare. Перейдем в раздел crypto и первой строчкой мы увидим SSL, здесь нужно поставить значение FULL и пояснить: как вы видите, есть 4 возможных варианта: off, flexible, full и full(strict).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;off - ни один пользователь не увидит ваш сайт через https.&lt;/li&gt;
&lt;li&gt;flexible SSL - на вашем сервере нет https, даже с сертификатом, который не подходит для вашего сайта. CloudFlare будет делать https соединение с пользователями, но обмениваться информацией с вашим сервером по http.&lt;/li&gt;
&lt;li&gt;full SSL - ваш сервер поддерживает https (GitHub поддерживает), но установленый сертификат  не соответствует вашему домену (так и есть, ведь сертификат выдан на *.github.com). В этом случае CloudFlare не будет проверять соответствие домена сертификату.&lt;/li&gt;
&lt;li&gt;full SSL (strict) - ваш сервер имеет корректный сертификат (не истекший и подписанный Cloudflare Origin CA или доверенным CA).
Напомню, что наш вариант - full SSL. Обновление сертификата может занять около 24 часов.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Дополнительно в этом меню можно включить постоянное перенаправление http на https.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Кешируй, что можешь, пока молодой&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Финальный шаг нашего создания хорошего блога программиста - настроить кеш. Скорее всего, настройки по умолчанию вас удовлетворят, но возможно что-то захочется поменять. Перейдем к разделу Caching. Первое, что вы увидите в этом разделе - это возможность очистить кеш. И в случае с блогом, если посты не частые, то чистку можно делать сразу после поста. На этом экране могут пригодиться как настройки кеширования, так и, например, Development Mode, который позволяет прокидывать изменения в режиме реального времени.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Похоже на финал&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Если вы читаете эти строки, значит вы очень любите читать, либо вы прошли большой, но интересный путь создания и запуска собственного блога. Эту статью я писал, опираясь на собственный опыт при создании &lt;a href=&#34;https://i-osipov.ru&#34;&gt;https://i-osipov.ru&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Статья перенесена из telegram канала &lt;strong&gt;Джун уронил прод&lt;/strong&gt; &lt;a href=&#34;https://t.me/djuup&#34;&gt;@djuup&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>